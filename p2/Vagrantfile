# export VAGRANT_HOME="$HOME/goinfre/.vagrant.d"

# local box will be used
# box generic/alpine38 (v4.2.14 currently released version) is downloaded from https://app.vagrantup.com/debian/boxes/bullseye64 (https://app.vagrantup.com/centos/boxes/7)
# as CentOS-7-x86_64-Vagrant-2004_01.VirtualBox.box
# than run  [ vagrant box add debian_bullseye64 ~/goinfre/debian_bullseye64   #CentOS-7-x86_64-Vagrant-2004_01.VirtualBox.box ]
# program output:
# ==> box: Box file was not detected as metadata. Adding it directly...
# ==> box: Adding box 'debian_bullseye64' (v0) for provider:
    # box: Unpacking necessary files from: file:///Users/bgoat/goinfre/8735b8d8-9dfe-402b-8985-de3192b1a1d9
# ==> box: Successfully added box 'debian_bullseye64' (v0) for 'virtualbox'!
# after that [vagrant up] can be used

# to demostrate ingress work install ModHeader (https://modheader.com/modheader/tutorial)
# it is used to define headers directly in browser

masterIp="192.168.56.110"

Vagrant.configure("2") do |config|
  config.vm.box = "debian_bullseye64"
  config.vm.synced_folder "./confs", "/home/vagrant/vagrant/confs"
  
  id_rsa_pub = File.read("#{ENV['HOME']}/.ssh/id_rsa.pub")
  config.vm.define "bgoatS" do | server |
    server.vm.network "forwarded_port", guest: 80, host: 80
    server.vm.hostname = "bgoatS"
    server.vm.network "private_network", ip: masterIp
    server.vm.provider "virtualbox" do |v|
      v.name = "bgoatS"
      v.memory = 2048
      v.cpus = 2
    end

    server.vm.provision "shell", privileged: true, inline:  <<-SHELL
      echo '#{id_rsa_pub}' >> /home/vagrant/.ssh/authorized_keys
      sudo apt-get update
      apt-get install curl net-tools -y
      export INSTALL_K3S_EXEC="--node-ip=#{masterIp} --flannel-iface=eth1 --write-kubeconfig-mode 644"
      curl -sfL https://get.k3s.io | sh -
      kubectl apply -f /home/vagrant/vagrant/confs
  SHELL
  end
    
end
